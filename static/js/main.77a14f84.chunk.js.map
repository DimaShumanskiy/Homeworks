{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","message__logo","src","avatar","alt","message__content","content__nickname","name","content__text","content__time","time","messageData","HW1","Affair","Wrap","Name","affair","Priority","priority","btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","filter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","inputError","input","content","value","onChange","placeholder","textError","disabled","GreetingContainer","users","addUserCallback","setName","setError","length","e","trimmedNewName","currentTarget","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Junior","JuniorPlus","Error404","PATH","Routes","path","exact","render","to","Header","link","activeClassName","active","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.77a14f84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1X3ex\",\"message__logo\":\"Message_message__logo__s7tbH\",\"message__content\":\"Message_message__content__1Jpat\",\"content__text\":\"Message_content__text__2jNsh\",\"content__nickname\":\"Message_content__nickname__13TVl\",\"content__time\":\"Message_content__time__3n42K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__13fhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3HjcP\",\"error\":\"Greeting_error__BsIBb\",\"inputError\":\"Greeting_inputError__2DQoJ\",\"input\":\"Greeting_input__1tSck\",\"btn\":\"Greeting_btn__22NB4\",\"content\":\"Greeting_content__1FM-e\",\"textError\":\"Greeting_textError__2DuTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrap\":\"Affairs_Wrap__2TcPP\",\"Name\":\"Affairs_Name__Itk1Z\",\"Priority\":\"Affairs_Priority__3VG-H\",\"btn\":\"Affairs_btn__2RzUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2KESq\",\"superInput\":\"SuperInputText_superInput__2Wtlk\",\"errorInput\":\"SuperInputText_errorInput__30toy\",\"error\":\"SuperInputText_error___aOL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__8HOuY\",\"red\":\"SuperButton_red__1Iq-V\",\"button\":\"SuperButton_button__Vf9r3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__14QsY\",\"column\":\"HW4_column__1qxSN\",\"testSpanError\":\"HW4_testSpanError__3LFcv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2ns2q\",\"spanClassName\":\"SuperCheckbox_spanClassName__3jx6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3mgd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__2y1WF\"};","import React from 'react'\nimport s from \"./Message.module.css\"\n\ntype MessagePropsType = {\n    avatar: string;\n    name: string;\n    message: string;\n    time: string;\n}\n\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div>\n            <div className={s.message}>\n                <img className={s.message__logo} src={props.avatar} alt=\"\"/>\n                <div className={s.message__content}>\n                    <h2 className={s.content__nickname}>{props.name}</h2>\n                    <p className={s.content__text}>{props.message}</p>\n                    <span className={s.content__time}>{props.time}</span>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message;\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            для личного творчества, могу проверить\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)// need to fix\n\n    return (\n        <div className={s.Wrap}>\n            <span className={s.Name}>{props.affair.name}</span>\n            <span className={s.Priority}>{props.affair.priority}</span>\n\n            <button className={s.btn} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport './Affair.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter:(filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    //фильтр по пораметрам\n    const setAll = () => props.setFilter('all')// need to fix\n    const setHigh = () => props.setFilter('high')\n    const setMiddle = () => props.setFilter('middle')\n    const setLow = () => props.setFilter('low')\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={props.filter === \"all\" ? 'active': ''}>All</button>\n            <button onClick={setHigh} className={props.filter === \"high\" ? 'active': ''}>High</button>\n            <button onClick={setMiddle} className={props.filter === \"middle\" ? 'active': ''}>Middle</button>\n            <button onClick={setLow} className={props.filter === \"low\" ? 'active': ''}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: AffairPriorityType\n}// need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else if (filter === 'low') return affairs.filter(a => a.priority === 'low')\n    else if (filter === 'high') return affairs.filter(a => a.priority === 'high')\n    else if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')\n    else {\n    }\n    return []\n    // else return affairs.filter(a =>a.priority === filter) другой способ\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.inputError : s.input\n\n    return (\n        <>\n        <div className={s.content}>\n            <div>\n                <input\n                    value={name}\n                    onChange={setNameCallback}\n                    className={inputClass}\n                    placeholder={'Enter your name'}/>\n                <div className={s.textError}>{error}</div>\n            </div>\n            <div>\n                <button\n                    onClick={addUser}\n                    className={s.btn}\n                    disabled={!name}\n                >add\n                </button>\n                <span>{totalUsers}</span>\n            </div>\n\n        </div>\n\n        </>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        const trimmedNewName = e.currentTarget.value.trim()\n        if (trimmedNewName !== ''){\n            setName(trimmedNewName)\n        } else {\n            setName('')\n            setError(\"Title is required\");\n        }\n\n    }\n\n    const addUser = () => {\n        addUserCallback(name)  // name - берем из замыкания\n        alert(`Hello ${name} !`)\n    }\n\n    const totalUsers = users.length // можно сделать на клик\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (name: string) => {\n        const addUser = {_id: v1(), name}\n        setUsers([...users, addUser])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error? s.errorInput : s.superInput } ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange &&  onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from \"./SuperEditableSpan.module.css\"\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.span} ${className ? className : '' }`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('Editable-Span-Value', ''))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR:'./junior',\n    JUNIOR_PLUS:'./junior-plus',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div>\n           <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>pre-junior</NavLink>\n           <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}>junior</NavLink>\n           <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>junior-plus</NavLink>\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n                <Header/>\n\n                <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <h1>Hello</h1>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}